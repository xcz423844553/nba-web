{"version":3,"sources":["assets/images/nba-logoman-word-white.svg","components/TopNavBar.js","components/ShotChart.js","components/CountSlider.js","components/DataViewContainer.js","constants.js","components/Profile.js","components/SearchBar.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","TopNavBar","className","src","logo","alt","React","Component","window","d3_hexbin","hexbin","ShotChart","nba","stats","shots","PlayerID","this","props","playerId","then","response","final_shots","shot_Chart_Detail","map","shot","x","locX","y","locY","action_type","actionType","shot_distance","shotDistance","shot_made_flag","shotMadeFlag","courtSelection","d3","html","chart_court","court","width","chart_shots","shotRenderThreshold","minCount","displayToolTips","displayTooltip","displayType","chartType","call","datum","id","CountSlider","state","inputValue","onChange","value","cleanValue","Number","setState","onCountSliderChange","span","min","max","style","marginLeft","RadioGroup","Radio","Group","DataViewContainer","count","onChartTypeChange","e","console","log","target","onTooltipChange","lod","debounce","checkedChildren","unCheckedChildren","defaultChecked","PROFILE_PIC_URL_PREFIX","DEFAULT_PLAYER_INFO","fullName","teamAbbreviation","Profile","playerInfo","teamCity","teamName","playerName","height","weight","pts","reb","ast","pie","Option","AutoComplete","SearchBar","dataSource","handleSearch","searchPlayers","player","onSelect","loadPlayerInfo","options","key","size","onSearch","placeholder","optionLabelProp","suffix","type","Main","findPlayer","info","Object","assign","commonPlayerInfo","playerHeadlineStats","handleSelectPlayer","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.53a66ee7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nba-logoman-word-white.63bc98a9.svg\";","\nimport React from 'react';\nimport logo from '../assets/images/nba-logoman-word-white.svg';\n\nexport class TopNavBar extends React.Component {\n render() {\n   return (\n     <header className=\"App-header\">\n       <img src={logo} className=\"App-logo\" alt=\"logo\" />\n     </header>\n   );\n }\n}","import React from 'react';\nimport nba from 'nba';\nimport * as d3 from 'd3';\nimport { hexbin } from 'd3-hexbin';\nimport { court, shots } from 'd3-shotchart';\nimport PropTypes from 'prop-types';\n\nwindow.d3_hexbin = {hexbin : hexbin}; // workaround library problem\n\nexport class ShotChart extends React.Component {\n static propTypes = {\n   playerId: PropTypes.number,\n   minCount: PropTypes.number,\n   chartType: PropTypes.string,\n   displayTooltip: PropTypes.bool,\n }\n\n componentDidUpdate() {\n   nba.stats.shots({\n     PlayerID: this.props.playerId\n   }).then((response) => {\n     const final_shots = response.shot_Chart_Detail.map(shot => ({\n       x: (shot.locX + 250) / 10,\n       y: (shot.locY + 50) / 10,\n       action_type: shot.actionType,\n       shot_distance: shot.shotDistance,\n       shot_made_flag: shot.shotMadeFlag,\n     }));\n\n     const courtSelection = d3.select(\"#shot-chart\");\n     courtSelection.html('');\n     const chart_court = court().width(500);\n     const chart_shots = shots()\n       .shotRenderThreshold(this.props.minCount)\n       .displayToolTips(this.props.displayTooltip)\n       .displayType(this.props.chartType);\n     courtSelection.call(chart_court);\n     courtSelection.datum(final_shots).call(chart_shots);\n   });\n }\n render() {\n   return (\n     <div id=\"shot-chart\"></div>\n   );\n }\n}\n","import React from 'react';\nimport { Slider, InputNumber, Row, Col } from 'antd';\n\nexport class CountSlider extends React.Component {\n state = {\n   inputValue: 2,\n }\n\n onChange = (value) => {\n   const cleanValue = Number(value) ? value : this.state.inputValue;\n   this.setState({\n     inputValue: cleanValue,\n   });\n   this.props.onCountSliderChange(cleanValue);\n }\n\n render() {\n   return (\n     <Row>\n       <Col span={12}>\n         <Slider min={1} max={20} onChange={this.onChange} value={this.state.inputValue} />\n       </Col>\n       <Col span={4}>\n         <InputNumber\n           min={1}\n           max={20}\n           style={{ marginLeft: 16 }}\n           value={this.state.inputValue}\n           onChange={this.onChange}\n         />\n       </Col>\n     </Row>\n   );\n }\n}\n","import React from 'react';\nimport lod from 'lodash';\nimport { ShotChart } from './ShotChart';\nimport { CountSlider } from './CountSlider';\nimport { Radio, Row, Col, Switch } from 'antd';\n\nconst RadioGroup = Radio.Group;\n\nexport class DataViewContainer extends React.Component {\n state = {\n   minCount: 2,\n   chartType: 'hexbin',\n   displayTooltip: true,\n }\n\n onCountSliderChange = (count) => {\n   this.setState({ minCount: count });\n }\n\n onChartTypeChange = (e) => {\n   console.log(e.target.value);\n   this.setState({ chartType: e.target.value });\n }\n\n onTooltipChange = (displayTooltip) => {\n   console.log(displayTooltip);\n   this.setState({ displayTooltip });\n }\n\n render() {\n   console.log('render');\n   return (\n     <div className=\"data-view\">\n       <ShotChart\n         playerId={this.props.playerId}\n         minCount={this.state.minCount}\n         chartType={this.state.chartType}\n         displayTooltip={this.state.displayTooltip}\n       />\n       <div className=\"filters\">\n         {this.state.chartType === 'hexbin' ?\n           <CountSlider value={this.state.minCount}\nonCountSliderChange={lod.debounce(this.onCountSliderChange, 500)}/> : null}\n         <br/>\n         <Row>\n           <Col span={9}>\n             <RadioGroup onChange={this.onChartTypeChange} value={this.state.chartType}>\n               <Radio value=\"hexbin\">Hexbin</Radio>\n               <Radio value=\"scatter\">Scatter</Radio>\n             </RadioGroup>\n           </Col>\n           <Col span={4}>\n             <Switch\n               checkedChildren=\"On\"\n               unCheckedChildren=\"Off\"\n               onChange={this.onTooltipChange}\n               defaultChecked />\n           </Col>\n         </Row>\n       </div>\n     </div>\n   );\n }\n}\n","export const PROFILE_PIC_URL_PREFIX =\n 'https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190';\nexport const TEAM_PIC_URL_PREFIX = 'http://stats.nba.com/media/img/teams/logos';\nexport const DEFAULT_PLAYER_INFO = {\n playerId: 201939,\n fullName: 'Stephen Curry',\n teamAbbreviation: 'GSW',\n};","import React from 'react';\nimport { PROFILE_PIC_URL_PREFIX, TEAM_PIC_URL_PREFIX } from '../constants';\n\nexport class Profile extends React.Component {\n render() {\n   const {\n     teamAbbreviation,\n     teamCity,\n     teamName,\n     playerName,\n     height,\n     weight,\n     playerId,\n     pts, reb, ast, pie,\n   } = this.props.playerInfo;\n   return (\n     <div className=\"profile\">\n       <div className=\"profile-entry player-name\">{`${playerName}`}</div>\n       <img\n         className=\"profile-pic\"\n         src={`${PROFILE_PIC_URL_PREFIX}/${playerId}.png`}\n         alt=\"Profile\"\n       />\n       <div className=\"profile-entry\">\n         <div className=\"profile-entry-left\">Team</div>\n         <div className=\"profile-entry-right\">{`${teamCity} ${teamName}`}</div>\n       </div>\n       <img\n         className=\"team-logo\"\n         src={`${TEAM_PIC_URL_PREFIX}/${teamAbbreviation}_logo.svg`}\n         alt=\"Team\"\n       />\n       <div className=\"profile-entry\">\n         <div className=\"profile-entry-left\">Height</div>\n         <div className=\"profile-entry-right\">{`${height}`}</div>\n       </div>\n       <div className=\"profile-entry\">\n         <div className=\"profile-entry-left\">Weight</div>\n         <div className=\"profile-entry-right\">{`${weight}`}</div>\n       </div>\n       <div className=\"profile-entry\">\n         <div className=\"profile-entry-left\">PTS</div>\n         <div className=\"profile-entry-right\">{`${pts}`}</div>\n       </div>\n       <div className=\"profile-entry\">\n         <div className=\"profile-entry-left\">REB</div>\n         <div className=\"profile-entry-right\">{`${reb}`}</div>\n       </div>\n       <div className=\"profile-entry\">\n         <div className=\"profile-entry-left\">AST</div>\n         <div className=\"profile-entry-right\">{`${ast}`}</div>\n       </div>\n       <div className=\"profile-entry\">\n         <div className=\"profile-entry-left\">PIE</div>\n         <div className=\"profile-entry-right\">{`${pie}`}</div>\n       </div>\n     </div>\n   );\n }\n}\n","import React from 'react';\nimport { AutoComplete, Input, Icon } from 'antd';\nimport nba from 'nba';\nimport { PROFILE_PIC_URL_PREFIX } from '../constants';\n\nconst { Option } = AutoComplete;\n\nexport class SearchBar extends React.Component {\n state = {\n   dataSource: [],\n }\n\n handleSearch = (value) => {\n   console.log(value);\n\n   this.setState({\n       dataSource: !value ?\n          [] : nba.searchPlayers(value).map(player => ({\n                  fullName: player.fullName,\n                  playerId: player.playerId,\n      }))\n});\n\n }\n\n onSelect = (playerName) => {\n   this.props.loadPlayerInfo(playerName);\n }\n\n render() {\n   const { dataSource } = this.state;\n   const options = dataSource.map((player) => (\n      <Option key={player.fullName} value={player.fullName}          className=\"player-option\">\n      <img className=\"player-option-image\" src={`${PROFILE_PIC_URL_PREFIX}/${player.playerId}.png`} />\n        <span className=\"player-option-label\">{player.fullName}</span>\n      </Option>\n  ));\n\n   return (\n     <AutoComplete\n       className=\"search-bar\"\n       size=\"large\"\n       dataSource={options}\n       onSelect={this.onSelect}\n       onSearch={this.handleSearch}\n       placeholder=\"Search NBA Player\"\n       optionLabelProp=\"value\"\n     >\n       <Input suffix={<Icon type=\"search\" className=\"certain-category-icon\" />} />\n     </AutoComplete>\n   );\n }\n}\n","import React from 'react';\nimport { DataViewContainer } from './DataViewContainer';\nimport nba from 'nba'\nimport { Profile } from './Profile';\nimport { SearchBar } from './SearchBar';\nimport { DEFAULT_PLAYER_INFO } from '../constants';\n\nclass Main extends React.Component {\n\n state = {\n   playerInfo: DEFAULT_PLAYER_INFO,\n }\n\n componentDidMount() {\n   this.loadPlayerInfo(this.state.playerInfo.fullName);\n }\n\n loadPlayerInfo = (playerName) => {\n   nba.stats.playerInfo({ PlayerID: nba.findPlayer(playerName).playerId }).then((info) => {\n     const playerInfo = Object.assign(info.commonPlayerInfo[0], info.playerHeadlineStats[0]);\n     this.setState({ playerInfo });\n   });\n }\n\n handleSelectPlayer = (playerName) => {\n  this.loadPlayerInfo(playerName);\n }\n\n\n render() {\n   return (\n     <div className=\"main\">\n       <SearchBar handleSelectPlayer={this.handleSelectPlayer} loadPlayerInfo={this.loadPlayerInfo}/>\n       <div className=\"player\">\n         <Profile playerInfo={this.state.playerInfo}/>\n         <DataViewContainer playerId={this.state.playerInfo.playerId}/>\n       </div>\n     </div>\n   );\n }\n}\n\n\nexport default Main;","\nimport React, { Component } from 'react';\nimport { TopNavBar } from './TopNavBar';\nimport Main from './Main';\n\nclass App extends Component {\n render() {\n   return (\n     <div className=\"App\">\n       <TopNavBar/>\n       <Main/>\n     </div>\n   );\n }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}